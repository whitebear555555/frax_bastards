// AUTO-GENERATED by typescript-type-def

export type U32 = number;
export type Condition = ("BeginTurn" | "EndTurn" | {
    "Activation": {
        "cost": U32;
    };
} | "TakeDamage");
export type Target = ("All" | "Aliade" | "Enemy" | "Random");
export type Color = ("Uncolor" | "Red" | "Green" | "Blue");
export type Effect = ({
    "Attack": {
        "color": Color;
        "min": U32;
        "max": U32;
    };
} | {
    "Resist": {
        "color": Color;
        "min": U32;
        "max": U32;
    };
} | {
    "Def": {
        "color": Color;
        "min": U32;
        "max": U32;
    };
} | {
    "Heal": {
        "min": U32;
        "max": U32;
    };
} | {
    "Vampirism": {
        "min": U32;
        "max": U32;
    };
} | {
    "Poison": {
        "min": U32;
        "max": U32;
    };
});
export type Rarity = ("Common" | "Rare" | "Mythical");
export type Trait = {
    "id": U32;
    "condition": (Condition)[];
    "target": (Target)[];
    "effect": (Effect)[];
    "rarity": Rarity;
};
export type StatusEffect = ("Poisoned" | "Bleeding" | "Stun");
export type Unit = {
    "id": U32;
    "name": string;
    "healty": U32;
    "traits": Record<U32, Trait>;
    "level": U32;
    "exp": U32;
    "status": ([StatusEffect, U32] | null);
    "mana": U32;
};
export type Item = {
    "id": U32;
    "condition": (Condition)[];
    "target": (Target)[];
    "effect": (Effect)[];
    "rarity": Rarity;
};
export type Player = {
    "id": U32;
    "name": string;
    "units": Record<U32, (Unit | null)>;
    "items": Record<U32, Item>;
    "mana": ([Color, U32])[];
};
export type Action = ({
    "type": "PlayMatch";
} | ({
    "type": "PlayerData";
} & Player) | ({
    "type": "UseTrait";
} & {
    "player_id": U32;
    "unit_id": U32;
    "trait_id": U32;
    "targets": (U32)[];
}) | ({
    "type": "UseItem";
} & {
    "player_id": U32;
    "unit_id": U32;
    "item_id": U32;
    "targets": (U32)[];
}) | {
    "type": "EndTurn";
});
export type Match = {
    "id": U32;
    "players": Record<U32, Player>;
    "turn_order": ([U32, U32])[];
    "turn": [U32, U32];
};
export type Command = ({
    "type": "MatchFind";
} | ({
    "type": "InitMatch";
} & Match) | ({
    "type": "Trait";
} & {
    "player_id": U32;
    "unit_id": U32;
    "trait_id": U32;
    "targets": ([U32, U32])[];
}) | ({
    "type": "Item";
} & {
    "player_id": U32;
    "unit_id": U32;
    "trait_id": U32;
    "targets": ([U32, U32])[];
}) | {
    "type": "NextTurn";
} | {
    "type": "Nope";
});
